{"version":3,"sources":["Game/Cell/index.js","Game/GridRow/index.js","Game/Grid/index.js","Game/Header/index.js","firebase.js","Game/Winningdialog/index.js","Game/index.js","Difficulty/index.js","Highscore/index.js","Minesweeper.js","index.js"],"names":["Cell","props","color","data","minesAround","style","isPressed","hasMine","className","onClick","click","onContextMenu","e","preventDefault","flag","hasFlag","GridRow","cells","map","index","key","Grid","createGrid","grid","i","rows","push","j","columns","x","y","mines","row","Math","floor","random","col","chosencell","cell","game","Promise","resolve","countNeighbours","then","state","currentCell","openedCells","newRows","setState","onCellInspect","winCheck","countEmptyCell","revealBombs","finishGame","length","winning","total","rowOff","colOff","changeFlagsNumber","isNew","nextProps","this","Component","Header","minutes","time","seconds","timeToSend","flags","reset","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","WinningDialog","onSaveTime","firestore","collection","category","add","name","highscore","onClose","onNameChange","bind","target","value","winningDialog","limit","type","id","onChange","onNewGame","isOpen","Game","getCategory","tick","setInterval","fn","t","intervals","setLastValues","beginner","intermediate","expert","beginnerLast","intermediateLast","expertLast","newState","clearInterval","isWinningDialog","handleCellInspect","previousState","amount","widthstyle","width","Difficulty","selectedCheck","checkCategory","checkNumber","num","min","max","validateMine","mine","round","newGame","radio","crow","customrows","ccol","customcolumns","cmine","custommines","cmineValid","isCustomSelected","onCustomRowChange","onCustomColumnChange","onCustomMinesChange","console","log","difficulty","colSpan","checked","htmlFor","disabled","useTimes","useState","cat","setTimes","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","newData","docs","doc","Highscore","lastValue","Minesweeper","manageDifficulty","recrows","reccolumns","recmines","current","getLastValue","createRef","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.718bc33d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cell = (props) => {\r\n  var color = \"\";\r\n  if (props.data.minesAround === 1) {\r\n    color = \"blue\";\r\n  } else if (props.data.minesAround === 2) {\r\n    color = \"green\";\r\n  } else if (props.data.minesAround === 3) {\r\n    color = \"red\";\r\n  } else if (props.data.minesAround === 4) {\r\n    color = \"purple\";\r\n  } else if (props.data.minesAround === 5) {\r\n    color = \"maroon\";\r\n  } else if (props.data.minesAround === 6) {\r\n    color = \"turquoise\";\r\n  } else if (props.data.minesAround === 7) {\r\n    color = \"black\";\r\n  } else if (props.data.minesAround === 8) {\r\n    color = \"gray\";\r\n  }\r\n  var style = { color: color };\r\n  let cell = () => {\r\n    if (props.data.isPressed) {\r\n      if (props.data.hasMine) {\r\n        return (\r\n          <div\r\n            className=\"bomb cell\"\r\n            onClick={() => props.click(props.data)}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          ></div>\r\n        );\r\n      } else if (props.data.minesAround === 0) {\r\n        return (\r\n          <div\r\n            className=\"pressed cell\"\r\n            onClick={() => props.click(props.data)}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              props.flag(props.data);\r\n            }}\r\n          />\r\n        );\r\n      } else {\r\n        return (\r\n          <div\r\n            style={style}\r\n            className=\"pressed cell\"\r\n            onClick={() => props.click(props.data)}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              props.flag(props.data);\r\n            }}\r\n          >\r\n            {props.data.minesAround}\r\n          </div>\r\n        );\r\n      }\r\n    } else if (props.data.hasFlag) {\r\n      return (\r\n        <div\r\n          className=\"flagged cell\"\r\n          onClick={() => props.click(props.data)}\r\n          onContextMenu={(e) => {\r\n            e.preventDefault();\r\n            props.flag(props.data);\r\n          }}\r\n        ></div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"cell\"\r\n          onClick={() => props.click(props.data)}\r\n          onContextMenu={(e) => {\r\n            e.preventDefault();\r\n            props.flag(props.data);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  return cell();\r\n};\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"../Cell\"\r\n\r\nconst GridRow = (props) => {\r\n  let cells = props.cells.map((data, index) => {\r\n    return <Cell key={index} data={data} click={props.click} flag={props.flag}/>;\r\n  });\r\n\r\n  return <div className=\"row\">{cells}</div>;\r\n};\r\n\r\nexport default GridRow;\r\n","import React, { Component } from \"react\";\r\nimport GridRow from \"../GridRow\";\r\n\r\nclass Grid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: this.createGrid(props),\r\n    };\r\n    this.isNew = false;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      this.props.openedCells > nextProps.openedCells ||\r\n      this.props.openedCells === 0\r\n    ) {\r\n      this.setState({\r\n        rows: this.createGrid(nextProps),\r\n      });\r\n    }\r\n  }\r\n\r\n  createGrid = (props) => {\r\n    let grid = [];\r\n\r\n    for (let i = 0; i < props.rows; i++) {\r\n      grid.push([]);\r\n      for (let j = 0; j < props.columns; j++) {\r\n        grid[i].push({\r\n          x: j,\r\n          y: i,\r\n\r\n          minesAround: 0,\r\n          hasMine: false,\r\n          isPressed: false,\r\n          hasFlag: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < props.mines; i++) {\r\n      let row = Math.floor(Math.random() * props.rows);\r\n      let col = Math.floor(Math.random() * props.columns);\r\n\r\n      let chosencell = grid[row][col];\r\n\r\n      if (chosencell.hasMine) {\r\n        i--;\r\n      } else {\r\n        chosencell.hasMine = true;\r\n      }\r\n    }\r\n    return grid;\r\n  };\r\n\r\n  click = (cell) => {\r\n    if (this.props.game === \"ended\" || this.props.game === \"won\") {\r\n      return;\r\n    }\r\n\r\n    let neighbours = new Promise((resolve) => {\r\n      let bombs = this.countNeighbours(cell);\r\n\r\n      resolve(bombs);\r\n    });\r\n\r\n    neighbours.then((countNeighbours) => {\r\n      let rows = this.state.rows;\r\n      let currentCell = rows[cell.y][cell.x];\r\n      currentCell.minesAround = countNeighbours;\r\n      if (\r\n        (currentCell.hasMine && this.props.openedCells === 0) ||\r\n        (this.props.openedCells === 0 && currentCell.minesAround >= 1)\r\n      ) {\r\n        let newRows = this.createGrid(this.props);\r\n        this.setState(\r\n          {\r\n            rows: newRows,\r\n          },\r\n          () => {\r\n            this.click(cell);\r\n          }\r\n        );\r\n      } else {\r\n        if (!currentCell.isPressed && !cell.hasFlag) {\r\n          this.props.onCellInspect();\r\n          currentCell.isPressed = true;\r\n\r\n          this.setState({ rows }, () => {\r\n            this.winCheck();\r\n          });\r\n          if (!currentCell.hasMine && countNeighbours === 0) {\r\n            this.countEmptyCell(cell);\r\n          }\r\n          if (currentCell.hasMine && this.props.openedCells !== 0) {\r\n            this.revealBombs();\r\n\r\n            this.props.finishGame();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  winCheck = () => {\r\n    let grid = this.state.rows;\r\n    if (\r\n      this.props.mines + this.props.openedCells >=\r\n      this.props.columns * this.props.rows\r\n    ) {\r\n      for (let row = 0; row < grid.length; row++) {\r\n        for (let col = 0; col < grid[0].length; col++) {\r\n          let cell = grid[row][col];\r\n          if (cell.hasMine && cell.isPressed) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      this.props.winning();\r\n    }\r\n  };\r\n\r\n  revealBombs = () => {\r\n    let grid = this.state.rows;\r\n    for (let row = 0; row < grid.length; row++) {\r\n      for (let col = 0; col < grid[0].length; col++) {\r\n        let cell = grid[row][col];\r\n        if (cell.hasMine && !cell.isPressed) {\r\n          cell.isPressed = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  countNeighbours = (cell) => {\r\n    //Method based on the reference code, that was created in java\r\n    let total = 0;\r\n    for (let row = -1; row <= 1; row++) {\r\n      for (let col = -1; col <= 1; col++) {\r\n        if (cell.y + row >= 0 && cell.x + col >= 0) {\r\n          let rowOff = row + cell.y;\r\n          let colOff = col + cell.x;\r\n          if (\r\n            rowOff < this.state.rows.length &&\r\n            colOff < this.state.rows[0].length\r\n          ) {\r\n            if (\r\n              this.state.rows[rowOff][colOff].hasMine &&\r\n              !(row === 0 && col === 0)\r\n            ) {\r\n              total++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  countEmptyCell = (cell) => {\r\n    //Spin through the neighbouring cells just as in the before method\r\n    let rows = this.state.rows;\r\n    for (let row = -1; row <= 1; row++) {\r\n      for (let col = -1; col <= 1; col++) {\r\n        if (cell.y + row >= 0 && cell.x + col >= 0) {\r\n          let rowOff = row + cell.y;\r\n          let colOff = col + cell.x;\r\n          if (\r\n            rowOff < this.state.rows.length &&\r\n            colOff < this.state.rows[0].length\r\n          ) {\r\n            if (\r\n              !rows[rowOff][colOff].hasMine &&\r\n              !rows[rowOff][colOff].isPressed\r\n            ) {\r\n              this.click(rows[rowOff][colOff]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  flag = (cell) => {\r\n    let rows = this.state.rows;\r\n    if (\r\n      this.props.game === \"ended\" ||\r\n      this.props.game === \"won\" ||\r\n      this.props.game !== \"running\"\r\n    ) {\r\n      return;\r\n    } else if (!cell.isPressed) {\r\n      cell.hasFlag = !cell.hasFlag;\r\n      this.setState({ rows });\r\n      this.props.changeFlagsNumber(cell.hasFlag ? -1 : 1);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //Create rows\r\n    let rows = this.state.rows.map((row, index) => {\r\n      return (\r\n        <GridRow cells={row} key={index} click={this.click} flag={this.flag} />\r\n      );\r\n    });\r\n    return <div className=\"grid\">{rows}</div>;\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  let minutes = Math.floor(props.time / 60);\r\n  let seconds = props.time - minutes * 60 || 0;\r\n  let timeToSend = minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\r\n  return (\r\n    <div className=\"grid-header\">\r\n      <div className=\"flags\">{props.flags}</div>\r\n      <button className=\"reset\" onClick={props.reset}>\r\n        RESET\r\n      </button>\r\n      <div className=\"timer\">{timeToSend}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCu9A50p4clufXz8Ft-GJ7PeckR554OCpE\",\r\n  authDomain: \"minesweeper-5e51e.firebaseapp.com\",\r\n  databaseURL: \"https://minesweeper-5e51e.firebaseio.com\",\r\n  projectId: \"minesweeper-5e51e\",\r\n  storageBucket: \"minesweeper-5e51e.appspot.com\",\r\n  messagingSenderId: \"778902912347\",\r\n  appId: \"1:778902912347:web:8220def6b1ccb2ca9d2e7e\",\r\n  measurementId: \"G-T22JZMP503\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport firebase from \"../../firebase\";\r\n\r\nclass WinningDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n\r\n    this.onNameChange = this.onNameChange.bind(this);\r\n  }\r\n\r\n  onNameChange(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let winningDialog = (\r\n      <div className=\"winningStyles\">\r\n        <div className=\"Message\">\r\n          Congratulations, you beat the game in {this.props.time} seconds!!!\r\n        </div>\r\n\r\n        {(this.props.limit === -1 || this.props.limit > this.props.time) && (\r\n          <div>\r\n            <input type=\"text\" id=\"name\" onChange={this.onNameChange}></input>\r\n            <button className=\"buttons\" id=\"save\" onClick={this.onSaveTime}>\r\n              Save my time\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <button\r\n            className=\"buttons\"\r\n            id=\"newgame\"\r\n            \r\n            onClick={this.props.onNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n          <button className=\"buttons\" id=\"cancel\" onClick={this.props.onClose}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (!this.props.isOpen) {\r\n      winningDialog = null;\r\n    }\r\n    return <div>{winningDialog}</div>;\r\n  }\r\n\r\n  onSaveTime = (e) => {\r\n    firebase.firestore().collection(this.props.category).add({\r\n      name: this.state.name,\r\n      highscore: this.props.time,\r\n    });\r\n    this.props.onClose();\r\n  };\r\n}\r\nexport default WinningDialog;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport Grid from \"./Grid\";\r\nimport Header from \"./Header\";\r\n\r\nimport WinningDialog from \"./Winningdialog\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openedCells: 0,\r\n      time: 0,\r\n      rows: props.rows,\r\n      columns: props.columns,\r\n      mines: props.mines,\r\n      flags: props.flags,\r\n      game: \"pending\",\r\n      isWinningDialog: false,\r\n      category: this.getCategory(),\r\n      limit: \"\",\r\n    };\r\n    this.beginnerLast = \"\";\r\n    this.intermediateLast = \"\";\r\n    this.expertLast = \"\";\r\n  }\r\n\r\n  getCategory = () => {\r\n    if (\r\n      this.props.rows === 9 &&\r\n      this.props.columns === 9 &&\r\n      this.props.mines === 10\r\n    ) {\r\n      return \"beginner\";\r\n    } else if (\r\n      this.props.rows === 16 &&\r\n      this.props.columns === 16 &&\r\n      this.props.mines === 40\r\n    ) {\r\n      return \"intermediate\";\r\n    } else if (\r\n      this.props.rows === 16 &&\r\n      this.props.columns === 30 &&\r\n      this.props.mines === 99\r\n    ) {\r\n      return \"expert\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.intervals = [];\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.state.openedCells > 0 && this.state.game === \"running\") {\r\n      let time = this.state.time + 1;\r\n      this.setState({ time });\r\n    }\r\n  };\r\n\r\n  setInterval = (fn, t) => {\r\n    this.intervals.push(setInterval(fn, t));\r\n  };\r\n\r\n  setLastValues = (beginner, intermediate, expert) => {\r\n    this.beginnerLast = beginner;\r\n    this.intermediateLast = intermediate;\r\n    this.expertLast = expert;\r\n  };\r\n\r\n  reset = () => {\r\n    this.newState = {\r\n      openedCells: 0,\r\n      time: 0,\r\n      rows: this.props.rows,\r\n      columns: this.props.columns,\r\n      mines: this.props.mines,\r\n      flags: this.props.flags,\r\n      game: \"pending\",\r\n      category: this.getCategory(),\r\n    };\r\n\r\n    this.intervals.map(clearInterval);\r\n\r\n    this.setState({ ...this.newState }, () => {\r\n      this.intervals = [];\r\n    });\r\n    this.setState({ isWinningDialog: false });\r\n  };\r\n\r\n  finishGame = () => {\r\n    this.setState({\r\n      game: \"ended\",\r\n    });\r\n  };\r\n\r\n  handleCellInspect = () => {\r\n    if (this.state.game !== \"running\" && this.state.openedCells === 0) {\r\n      this.setState(\r\n        {\r\n          game: \"running\",\r\n        },\r\n        () => {\r\n          this.setInterval(this.tick, 1000);\r\n        }\r\n      );\r\n    }\r\n\r\n    this.setState((previousState) => {\r\n      return { openedCells: previousState.openedCells + 1 };\r\n    });\r\n  };\r\n\r\n  changeFlagsNumber = (amount) => {\r\n    this.setState({ flags: this.state.flags + amount });\r\n  };\r\n\r\n  winning = () => {\r\n    var value;\r\n    if (this.state.category === \"beginner\") {\r\n      value = this.beginnerLast;\r\n    } else if (this.state.category === \"intermediate\") {\r\n      value = this.intermediateLast;\r\n    } else if (this.state.category === \"expert\") {\r\n      value = this.expertLast;\r\n    }\r\n\r\n    this.setState({\r\n      limit: value,\r\n      game: \"won\",\r\n      isWinningDialog: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var widthstyle = {\r\n      width: this.state.columns * 34 + (this.state.columns >= 8 ? +12 : 9),\r\n    };\r\n    return (\r\n      <div className=\"minesweeper\">\r\n        <div style={widthstyle}>\r\n          <Header\r\n            time={this.state.time}\r\n            flags={this.state.flags}\r\n            reset={this.reset}\r\n            columns={this.state.columns}\r\n          />\r\n        </div>\r\n        <div style={widthstyle}>\r\n          <Grid\r\n            game={this.state.game}\r\n            openedCells={this.state.openedCells}\r\n            rows={this.state.rows}\r\n            columns={this.state.columns}\r\n            mines={this.state.mines}\r\n            changeFlagsNumber={this.changeFlagsNumber}\r\n            onCellInspect={this.handleCellInspect}\r\n            finishGame={this.finishGame}\r\n            winning={this.winning}\r\n          />\r\n        </div>\r\n\r\n        <WinningDialog\r\n          category={this.state.category}\r\n          isOpen={this.state.isWinningDialog}\r\n          onClose={(e) => this.setState({ isWinningDialog: false })}\r\n          onNewGame={this.reset}\r\n          time={this.state.time}\r\n          limit={this.state.limit}\r\n        ></WinningDialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\n\r\nclass Difficulty extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      radio: this.checkCategory(props),\r\n      customrows: 13,\r\n      customcolumns: 13,\r\n      custommines: 30,\r\n      isCustomSelected: this.selectedCheck(props),\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onCustomRowChange = this.onCustomRowChange.bind(this);\r\n    this.onCustomColumnChange = this.onCustomColumnChange.bind(this);\r\n    this.onCustomMinesChange = this.onCustomMinesChange.bind(this);\r\n  }\r\n\r\n  selectedCheck = (props) => {\r\n    if (\r\n      (props.rows === 9 && props.columns === 9 && props.mines === 10) ||\r\n      (props.rows === 16 && props.columns === 16 && props.mines === 40) ||\r\n      (props.rows === 16 && props.columns === 30 && props.mines === 99)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  checkCategory = (props) => {\r\n    if (props.rows === 9 && props.columns === 9 && props.mines === 10) {\r\n      return \"beginner\";\r\n    } else if (\r\n      props.rows === 16 &&\r\n      props.columns === 16 &&\r\n      props.mines === 40\r\n    ) {\r\n      return \"intermediate\";\r\n    } else if (\r\n      props.rows === 16 &&\r\n      props.columns === 30 &&\r\n      props.mines === 99\r\n    ) {\r\n      return \"expert\";\r\n    } else {\r\n      return \"custom\";\r\n    }\r\n  };\r\n\r\n  onChange(e) {\r\n    console.log(e.target.value);\r\n    if (e.target.value === \"custom\") {\r\n      this.setState({\r\n        isCustomSelected: false,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isCustomSelected: true,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  }\r\n\r\n  onCustomRowChange(e) {\r\n    this.setState({\r\n      customrows: e.target.value,\r\n    });\r\n  }\r\n  onCustomColumnChange(e) {\r\n    this.setState({\r\n      customcolumns: e.target.value,\r\n    });\r\n  }\r\n  onCustomMinesChange(e) {\r\n    this.setState({\r\n      custommines: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let difficulty = (\r\n      <div className=\"difficultyStyles\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td id=\"tableTitle\">Difficulty</td>\r\n              <td colSpan=\"3\">\r\n                <button className=\"closeButton\" onClick={this.props.onClose}>\r\n                  x\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>Rows</td>\r\n              <td>Columns</td>\r\n              <td>Mines</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"radio\"\r\n                  onChange={this.onChange}\r\n                  value=\"beginner\"\r\n                  name=\"radio\"\r\n                  checked={this.state.radio === \"beginner\"}\r\n                  id=\"begi\"\r\n                />{\" \"}\r\n                <label htmlFor=\"begi\">Beginner</label>\r\n              </td>\r\n              <td>9</td>\r\n              <td>9</td>\r\n              <td>10</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"radio\"\r\n                  onChange={this.onChange}\r\n                  value=\"intermediate\"\r\n                  name=\"radio\"\r\n                  checked={this.state.radio === \"intermediate\"}\r\n                  id=\"inter\"\r\n                />{\" \"}\r\n                <label htmlFor=\"inter\">Intermediate</label>\r\n              </td>\r\n              <td>16</td>\r\n              <td>16</td>\r\n              <td>40</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"radio\"\r\n                  onChange={this.onChange}\r\n                  value=\"expert\"\r\n                  name=\"radio\"\r\n                  checked={this.state.radio === \"expert\"}\r\n                  id=\"exp\"\r\n                />{\" \"}\r\n                <label htmlFor=\"exp\">Expert</label>\r\n              </td>\r\n              <td>16</td>\r\n              <td>30</td>\r\n              <td>99</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"radio\"\r\n                  onChange={this.onChange}\r\n                  value=\"custom\"\r\n                  name=\"radio\"\r\n                  checked={this.state.radio === \"custom\"}\r\n                  id=\"cust\"\r\n                />{\" \"}\r\n                <label htmlFor=\"cust\">Custom</label>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.customrows}\r\n                  onChange={this.onCustomRowChange}\r\n                  className=\"custom\"\r\n                  disabled={this.state.isCustomSelected}\r\n                ></input>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.customcolumns}\r\n                  onChange={this.onCustomColumnChange}\r\n                  className=\"custom\"\r\n                  disabled={this.state.isCustomSelected}\r\n                ></input>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  value={this.state.custommines}\r\n                  onChange={this.onCustomMinesChange}\r\n                  className=\"custom\"\r\n                  disabled={this.state.isCustomSelected}\r\n                ></input>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button id=\"newGame\" onClick={this.newGame}>\r\n          New Game\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    if (!this.props.isOpen) {\r\n      difficulty = null;\r\n    }\r\n    return <div>{difficulty}</div>;\r\n  }\r\n\r\n  checkNumber = (num, min, max) => {\r\n    if (num > max) {\r\n      return max;\r\n    } else if (num < min) {\r\n      return min;\r\n    } else {\r\n      return num;\r\n    }\r\n  };\r\n\r\n  validateMine = (row, col, mine) => {\r\n    if (row * col > mine) {\r\n      return Math.round(mine * 10) / 10;\r\n    } else {\r\n      var num = Math.round(row * col * 0.8 * 10) / 10;\r\n      return num < 800 ? num : 800;\r\n    }\r\n  };\r\n\r\n  newGame = () => {\r\n    if (this.state.radio === \"beginner\") {\r\n      this.props.onNewGame(9, 9, 10);\r\n    } else if (this.state.radio === \"intermediate\") {\r\n      this.props.onNewGame(16, 16, 40);\r\n    } else if (this.state.radio === \"expert\") {\r\n      this.props.onNewGame(16, 30, 99);\r\n    } else if (this.state.radio === \"custom\") {\r\n      const crow = this.checkNumber(this.state.customrows, 2, 30);\r\n      const ccol = this.checkNumber(this.state.customcolumns, 6, 45);\r\n      const cmine = this.checkNumber(this.state.custommines, 3, 800);\r\n      const cmineValid = this.validateMine(crow, ccol, cmine);\r\n      this.setState({\r\n        customrows: crow,\r\n        customcolumns: ccol,\r\n        custommines: cmineValid,\r\n      });\r\n      this.props.onNewGame(crow, ccol, cmineValid);\r\n    }\r\n  };\r\n}\r\nexport default Difficulty;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport firebase from \"../firebase\";\r\n\r\nfunction useTimes(category) {\r\n  const [cat, setTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(category)\r\n      .orderBy(\"highscore\", \"asc\")\r\n      .limit(10)\r\n      .onSnapshot((snapshot) => {\r\n        const newData = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTimes(newData);\r\n      });\r\n    return () => unsubscribe();\r\n  }, [category]);\r\n  return cat;\r\n}\r\n\r\nconst Highscore = (props) => {\r\n  const beginner = useTimes(\"beginner\");\r\n  const intermediate = useTimes(\"intermediate\");\r\n  const expert = useTimes(\"expert\");\r\n\r\n  var beginnerLast = 0;\r\n  var intermediateLast = 0;\r\n  var expertLast = 0;\r\n\r\n  if (beginner.length < 10) {\r\n    beginnerLast = -1;\r\n  } else {\r\n    beginnerLast = beginner[9] && beginner[9].highscore;\r\n  }\r\n\r\n  if (intermediate.length < 10) {\r\n    intermediateLast = -1;\r\n  } else {\r\n    intermediateLast = intermediate[9] && intermediate[9].highscore;\r\n  }\r\n\r\n  if (expert.length < 10) {\r\n    expertLast = -1;\r\n  } else {\r\n    expertLast = expert[9] && expert[9].highscore;\r\n  }\r\n\r\n  props.lastValue(beginnerLast, intermediateLast, expertLast);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"category\">\r\n        <div className=\"title\">Beginner</div>\r\n        <ol>\r\n          {beginner.map((data) => (\r\n            <li className=\"item\" key={data.id}>\r\n              <div>\r\n                <div className=\"name\">{data.name}</div>\r\n                <div className=\"score\">{data.highscore}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className=\"category\">\r\n        <div className=\"title\">Intermediate</div>\r\n\r\n        <ol>\r\n          {intermediate.map((data) => (\r\n            <li className=\"item\" key={data.id}>\r\n              <div>\r\n                <div className=\"name\">{data.name}</div>\r\n                <div className=\"score\">{data.highscore}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className=\"category\">\r\n        <div className=\"title\">Expert</div>\r\n        <ol className=\"ol\">\r\n          {expert.map((data) => (\r\n            <li className=\"item\" key={data.id}>\r\n              <div>\r\n                <div className=\"name\">{data.name}</div>\r\n                <div className=\"score\">{data.highscore}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Highscore;\r\n","import React, { Component, createRef } from \"react\";\r\n\r\nimport Game from \"../../minesweeper/src/Game\";\r\nimport Difficulty from \"./Difficulty\";\r\nimport \"./index.css\";\r\nimport Highscore from \"./Highscore\";\r\n\r\nclass Minesweeper extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      isOpen: false,\r\n      //beginner\r\n      rows: 9,\r\n      columns: 9,\r\n      mines: 10,\r\n    };\r\n    this.game = createRef();\r\n  }\r\n\r\n  manageDifficulty = () => {\r\n    this.state.isOpen\r\n      ? this.setState({ isOpen: false })\r\n      : this.setState({ isOpen: true });\r\n  };\r\n\r\n  onNewGame = (recrows, reccolumns, recmines) => {\r\n    this.manageDifficulty();\r\n    this.setState(\r\n      {\r\n        rows: recrows,\r\n        columns: reccolumns,\r\n        mines: recmines,\r\n      },\r\n      () => {\r\n        this.game.current.reset();\r\n      }\r\n    );\r\n  };\r\n\r\n  getLastValue = (beginner, intermediate, expert) => {\r\n    if (this.game.current !== null) {\r\n      this.game.current.setLastValues(beginner, intermediate, expert);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"game\">\r\n          <button onClick={this.manageDifficulty}>Difficulty</button>\r\n          <Difficulty\r\n            isOpen={this.state.isOpen}\r\n            onClose={(e) => this.setState({ isOpen: false })}\r\n            onNewGame={this.onNewGame}\r\n            rows={this.state.rows}\r\n            columns={this.state.columns}\r\n            mines={this.state.mines}\r\n          ></Difficulty>\r\n\r\n          <Game\r\n            ref={this.game}\r\n            rows={this.state.rows}\r\n            columns={this.state.columns}\r\n            mines={this.state.mines}\r\n            flags={this.state.mines}\r\n          />\r\n        </div>\r\n        <div className=\"highscore\">\r\n          <Highscore lastValue={this.getLastValue} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Minesweeper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Minesweeper from \"./Minesweeper\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Minesweeper />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}